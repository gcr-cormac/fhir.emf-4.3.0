<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- 
  Copyright (c) 2011+, HL7, Inc.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  

  Generated on Thu, Dec 27, 2018 22:37+1100 for FHIR v4.0.0 

  Note: the schemas &amp; schematrons do not contain all of the rules about what makes resources
  valid. Implementers will still need to be familiar with the content of the specification and with
  any profiles that apply to the resources in order to make a conformant implementation.

--><xs:schema xmlns="http://hl7.org/fhir" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://hl7.org/fhir" version="1.0">
  <xs:include schemaLocation="fhir-base.xsd"/>
  <xs:element name="Task" type="Task">
    <xs:annotation>
      <xs:documentation xml:lang="en">A task to be performed.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Task">
    <xs:annotation>
      <xs:documentation xml:lang="en">A task to be performed.</xs:documentation>
      <xs:documentation xml:lang="en">If the element is present, it must have either a @value, an @id, or extensions</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DomainResource">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="identifier" type="Identifier">
            <xs:annotation>
              <xs:documentation xml:lang="en">The business identifier for this task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="instantiatesCanonical" type="canonical">
            <xs:annotation>
              <xs:documentation xml:lang="en">The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="instantiatesUri" type="uri">
            <xs:annotation>
              <xs:documentation xml:lang="en">The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="basedOn" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a "request" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the "request" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="groupIdentifier" type="Identifier">
            <xs:annotation>
              <xs:documentation xml:lang="en">An identifier that links together multiple tasks and other requests that were created in the same context.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="partOf" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">Task that this particular task is part of.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="1" name="status" type="TaskStatus">
            <xs:annotation>
              <xs:documentation xml:lang="en">The current status of the task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="statusReason" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">An explanation as to why this task is held, failed, was refused, etc.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="businessStatus" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">Contains business-specific nuances of the business state.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="1" name="intent" type="TaskIntent">
            <xs:annotation>
              <xs:documentation xml:lang="en">Indicates the "level" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="priority" type="RequestPriority">
            <xs:annotation>
              <xs:documentation xml:lang="en">Indicates how quickly the Task should be addressed with respect to other requests.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="code" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">A name or code (or both) briefly describing what the task involves.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="description" type="string">
            <xs:annotation>
              <xs:documentation xml:lang="en">A free-text description of what is to be performed.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="focus" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">The request being actioned or the resource being manipulated by this task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="for" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">The entity who benefits from the performance of the service specified in the task (e.g., the patient).</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="encounter" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="executionPeriod" type="Period">
            <xs:annotation>
              <xs:documentation xml:lang="en">Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="authoredOn" type="dateTime">
            <xs:annotation>
              <xs:documentation xml:lang="en">The date and time this task was created.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="lastModified" type="dateTime">
            <xs:annotation>
              <xs:documentation xml:lang="en">The date and time of last modification to this task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="requester" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">The creator of the task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="performerType" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">The kind of participant that should perform the task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="owner" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">Individual organization or Device currently responsible for task execution.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="location" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">Principal physical location where the this task is performed.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="reasonCode" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">A description or code indicating why this task needs to be performed.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="reasonReference" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">A resource reference indicating why this task needs to be performed.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="insurance" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="note" type="Annotation">
            <xs:annotation>
              <xs:documentation xml:lang="en">Free-text information captured about the task as it progresses.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="relevantHistory" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="restriction" type="Task.Restriction">
            <xs:annotation>
              <xs:documentation xml:lang="en">If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="input" type="Task.Input">
            <xs:annotation>
              <xs:documentation xml:lang="en">Additional information that may be needed in the execution of the task.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="output" type="Task.Output">
            <xs:annotation>
              <xs:documentation xml:lang="en">Outputs produced by the Task.</xs:documentation>
           </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Task.Restriction">
    <xs:annotation>
      <xs:documentation xml:lang="en">A task to be performed.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BackboneElement">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="repetitions" type="positiveInt">
            <xs:annotation>
              <xs:documentation xml:lang="en">Indicates the number of times the requested action should occur.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="period" type="Period">
            <xs:annotation>
              <xs:documentation xml:lang="en">Over what time-period is fulfillment sought.</xs:documentation>
           </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="recipient" type="Reference">
            <xs:annotation>
              <xs:documentation xml:lang="en">For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?</xs:documentation>
           </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Task.Input">
    <xs:annotation>
      <xs:documentation xml:lang="en">A task to be performed.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BackboneElement">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="type" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">A code or description indicating how the input is intended to be used as part of the task execution.</xs:documentation>
           </xs:annotation>
          </xs:element>
                      <xs:element minOccurs="0" name="valueBase64Binary" type="base64Binary">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueBoolean" type="boolean">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCanonical" type="canonical">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCode" type="code">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDate" type="date">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDateTime" type="dateTime">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDecimal" type="decimal">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueId" type="id">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueInstant" type="instant">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueInteger" type="integer">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueMarkdown" type="markdown">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueOid" type="oid">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valuePositiveInt" type="positiveInt">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueString" type="string">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueTime" type="time">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUnsignedInt" type="unsignedInt">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUri" type="uri">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUrl" type="url">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUuid" type="uuid">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAddress" type="Address">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAge" type="Age">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAnnotation" type="Annotation">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAttachment" type="Attachment">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCodeableConcept" type="CodeableConcept">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCoding" type="Coding">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueContactPoint" type="ContactPoint">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCount" type="Count">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDistance" type="Distance">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDuration" type="Duration">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueHumanName" type="HumanName">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueIdentifier" type="Identifier">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueMoney" type="Money">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valuePeriod" type="Period">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueQuantity" type="Quantity">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueRange" type="Range">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueRatio" type="Ratio">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueReference" type="Reference">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueSampledData" type="SampledData">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueSignature" type="Signature">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueTiming" type="Timing">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueContactDetail" type="ContactDetail">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueContributor" type="Contributor">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDataRequirement" type="DataRequirement">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueExpression" type="Expression">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueParameterDefinition" type="ParameterDefinition">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueRelatedArtifact" type="RelatedArtifact">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueTriggerDefinition" type="TriggerDefinition">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUsageContext" type="UsageContext">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDosage" type="Dosage">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the input parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Task.Output">
    <xs:annotation>
      <xs:documentation xml:lang="en">A task to be performed.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BackboneElement">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="type" type="CodeableConcept">
            <xs:annotation>
              <xs:documentation xml:lang="en">The name of the Output parameter.</xs:documentation>
           </xs:annotation>
          </xs:element>
                      <xs:element minOccurs="0" name="valueBase64Binary" type="base64Binary">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueBoolean" type="boolean">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCanonical" type="canonical">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCode" type="code">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDate" type="date">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDateTime" type="dateTime">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDecimal" type="decimal">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueId" type="id">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueInstant" type="instant">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueInteger" type="integer">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueMarkdown" type="markdown">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueOid" type="oid">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valuePositiveInt" type="positiveInt">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueString" type="string">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueTime" type="time">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUnsignedInt" type="unsignedInt">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUri" type="uri">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUrl" type="url">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUuid" type="uuid">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAddress" type="Address">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAge" type="Age">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAnnotation" type="Annotation">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueAttachment" type="Attachment">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCodeableConcept" type="CodeableConcept">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCoding" type="Coding">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueContactPoint" type="ContactPoint">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueCount" type="Count">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDistance" type="Distance">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDuration" type="Duration">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueHumanName" type="HumanName">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueIdentifier" type="Identifier">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueMoney" type="Money">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valuePeriod" type="Period">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueQuantity" type="Quantity">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueRange" type="Range">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueRatio" type="Ratio">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueReference" type="Reference">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueSampledData" type="SampledData">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueSignature" type="Signature">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueTiming" type="Timing">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueContactDetail" type="ContactDetail">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueContributor" type="Contributor">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDataRequirement" type="DataRequirement">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueExpression" type="Expression">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueParameterDefinition" type="ParameterDefinition">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueRelatedArtifact" type="RelatedArtifact">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueTriggerDefinition" type="TriggerDefinition">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueUsageContext" type="UsageContext">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
            <xs:element minOccurs="0" name="valueDosage" type="Dosage">
              <xs:annotation>
                <xs:documentation xml:lang="en">The value of the Output parameter as a basic type. (choose any one of value*, but only one)</xs:documentation>
              </xs:annotation>
             </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="TaskStatus-list">
    <xs:restriction base="code-primitive">
      <xs:enumeration value="draft">
        <xs:annotation>
          <xs:documentation xml:lang="en">Draft</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="requested">
        <xs:annotation>
          <xs:documentation xml:lang="en">Requested</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="received">
        <xs:annotation>
          <xs:documentation xml:lang="en">Received</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="accepted">
        <xs:annotation>
          <xs:documentation xml:lang="en">Accepted</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="rejected">
        <xs:annotation>
          <xs:documentation xml:lang="en">Rejected</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ready">
        <xs:annotation>
          <xs:documentation xml:lang="en">Ready</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cancelled">
        <xs:annotation>
          <xs:documentation xml:lang="en">Cancelled</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="in-progress">
        <xs:annotation>
          <xs:documentation xml:lang="en">In Progress</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="on-hold">
        <xs:annotation>
          <xs:documentation xml:lang="en">On Hold</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="failed">
        <xs:annotation>
          <xs:documentation xml:lang="en">Failed</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="completed">
        <xs:annotation>
          <xs:documentation xml:lang="en">Completed</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="entered-in-error">
        <xs:annotation>
          <xs:documentation xml:lang="en">Entered in Error</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="TaskStatus">
    <xs:annotation>
      <xs:documentation xml:lang="en">The current status of the task.</xs:documentation>
      <xs:documentation xml:lang="en">If the element is present, it must have either a @value, an @id, or extensions</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Element">
        <xs:attribute name="value" type="TaskStatus-list" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="TaskIntent-list">
    <xs:restriction base="code-primitive">
      <xs:enumeration value="unknown">
        <xs:annotation>
          <xs:documentation xml:lang="en">Unknown</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="proposal">
        <xs:annotation>
          <xs:documentation xml:lang="en">Proposal</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="plan">
        <xs:annotation>
          <xs:documentation xml:lang="en">Plan</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="order">
        <xs:annotation>
          <xs:documentation xml:lang="en">Order</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="original-order">
        <xs:annotation>
          <xs:documentation xml:lang="en">Original Order</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="reflex-order">
        <xs:annotation>
          <xs:documentation xml:lang="en">Reflex Order</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="filler-order">
        <xs:annotation>
          <xs:documentation xml:lang="en">Filler Order</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="instance-order">
        <xs:annotation>
          <xs:documentation xml:lang="en">Instance Order</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="option">
        <xs:annotation>
          <xs:documentation xml:lang="en">Option</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="TaskIntent">
    <xs:annotation>
      <xs:documentation xml:lang="en">Distinguishes whether the task is a proposal, plan or full order.</xs:documentation>
      <xs:documentation xml:lang="en">If the element is present, it must have either a @value, an @id, or extensions</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Element">
        <xs:attribute name="value" type="TaskIntent-list" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>
